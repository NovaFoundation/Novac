package "novex/novac"

import "nova/datastruct/HashMap"
import "nova/datastruct/ImmutableHashMap"

import "novex/astro/Astro"
import "novex/astro/tree/SyntaxTree"
import "novex/spectra/Spectra"

class Novac {
    visible final immutable String[] ARGS
    
    visible immutable String[] directoryLocations
    
    public static main(String[] args) {
        let astro = new Astro()
        
        let tree = astro.build(args.skip(1))
        
    
    public construct(String[] args) {
        ARGS = args.skip(1)
        
        let map = new HashMap<String, Bool>()
        
        map["single-thread"] = true
        
        flags = map.toImmutable()
        
        directoryLocations = ARGS
    }
    
    public buildTree() -> SyntaxTree {
        astro = new Astro()
        
        return astro.build(this)
    }
    
    public validateTypes(SyntaxTree tree) -> Bool {
        let spectra = new Spectra()
        
        let valid = spectra.validate(tree)
        
        return valid
    }
    
    public optimizeTree(SyntaxTree tree) {
        
    }
    
    public linkTree(SyntaxTree tree) {
        
    }
}